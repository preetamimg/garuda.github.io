
import { invalid, valid, submitWithInvalid, submitWithValid, showPassword, onload_form, stopRefresh } from "./master/functions.js";


if($("[data-bs-theme-value]").length) {

    const storedTheme = localStorage.getItem('theme')

    const getPreferredTheme = () => {
      if (storedTheme) {
        return storedTheme
      }

      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
    }

    const setTheme = function (theme) {
      if (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {
        document.documentElement.setAttribute('data-bs-theme', 'dark')
      } else {
        document.documentElement.setAttribute('data-bs-theme', theme)
      }
    }

    setTheme(getPreferredTheme())

    const showActiveTheme = theme => {
      const activeThemeIcon = document.querySelector('.theme-icon-active use')
      const btnToActive = document.querySelector(`[data-bs-theme-value="${theme}"]`)
      const svgOfActiveBtn = btnToActive.querySelector('svg use').getAttribute('href')

      document.querySelectorAll('[data-bs-theme-value]').forEach(element => {
        element.classList.remove('active')
      })

      btnToActive.classList.add('active')
      activeThemeIcon.setAttribute('href', svgOfActiveBtn)
    }

    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
      if (storedTheme !== 'light' || storedTheme !== 'dark') {
        setTheme(getPreferredTheme())
      }
    })

    window.addEventListener('DOMContentLoaded', () => {
      showActiveTheme(getPreferredTheme())

      document.querySelectorAll('[data-bs-theme-value]')
        .forEach(toggle => {
          toggle.addEventListener('click', () => {
            const theme = toggle.getAttribute('data-bs-theme-value')
            localStorage.setItem('theme', theme)
            setTheme(theme)
            showActiveTheme(theme)
          })
        })
    })
}

const phoneInputFields = document.querySelectorAll('input.phone[type*=tel]'); // Replace 'input' with the selector for your input fields

phoneInputFields.forEach(function(phoneInputField) {
  phoneInputField.addEventListener('input', function(e) {
    if (phoneInputField.value.length < 4) {
      phoneInputField.value = '+91-';
    } else if (!phoneInputField.value.startsWith('+91-')) {
      phoneInputField.value = '+91-' + phoneInputField.value.slice(4);
    }
  });
});




const inputFields = document.querySelectorAll('input, textarea'); // Replace 'input' with the selector for your input fields

inputFields.forEach(function(inputField) {
  inputField.addEventListener('input', function(e) {
    const type = inputField.getAttribute('type');
    if (type === 'email' && !isValidEmail(inputField.value)) {
      inputField.setCustomValidity('Please enter a valid email address.');
    } else if (type === 'number' && isNaN(inputField.value)) {
      inputField.setCustomValidity('Please enter a valid number.');
    } else if (type === 'tel' && inputField.classList.contains('phone') && !isValidPhoneNumber(inputField.value)) {
      inputField.setCustomValidity('Please enter a valid phone number.');
    } else if (type === 'text' && inputField.classList.contains('first-name') && !isValidName(inputField.value)) {
      inputField.setCustomValidity('Please enter a valid first name.');
    } else if (type === 'text' && inputField.classList.contains('last-name') && !isValidName(inputField.value)) {
      inputField.setCustomValidity('Please enter a valid last name.');
    } else if (type === 'tel' && inputField.classList.contains('pincode') && !isValidPincode(inputField.value)) {
      inputField.setCustomValidity('Please enter a valid Indian PIN code.');
    } else {
      inputField.setCustomValidity('');
    }

    // For textarea, show character count
    if (inputField.classList.contains('message') && inputField.maxLength !== -1) {
      const remainingChars = inputField.maxLength - inputField.value.length;
      const counter = inputField.parentNode.querySelector('.char-count');
      if (counter) {
        counter.textContent = `Characters left: ${remainingChars}`;
      }
    }
  });
});

function isValidEmail(email) {
  // Use a regular expression to check if the email is valid
  const emailRegex = /^[\w\.-]*[a-zA-z][\w\.-]*@([\w-]+\.)+[\w-]{2,4}$/;
  return emailRegex.test(email);
}

function isValidPhoneNumber(phoneNumber) {
  // Use a regular expression to check if the phone number is valid
  const phoneRegex = /^\+91-[6-9]\d{9}$/;
  return phoneRegex.test(phoneNumber);
}

function isValidName(name) {
  // Use a regular expression to check if the name is valid
  const nameRegex = /^[\w\., -]*[a-zA-z].*[\w\., -]*$/;
  return nameRegex.test(name);
}

function isValidPincode(pincode) {
  // Use a regular expression to check if the PIN code is valid
  const pincodeRegex = /^\d{6}$/;
  return pincodeRegex.test(pincode);
}















window.onload = (event) => {
  console.log("Event Type ðŸ‘‰ " + event.type);

  
  //? ------------[select2 start]------------
  $('body').on('shown.bs.offcanvas', '.offcanvas', function() {
    $(this).find('select').each(function() {
        let dropdownParent = $(document.body);
        let selectid = $(this).attr('id');
        dropdownParent = $('#'+selectid).parent().closest('.offcanvas').attr('id');
        $(this).select2({
            dropdownParent: $('#'+dropdownParent),
            "language": {
                "noResults": function(){
                    return `
                    <div class="w-100 d-flex gap-1 justify-content-center py-3 flex-column">
                        <div class="w-100 text-center">
                            <img src="./public/frontend/assets/img/icons/emptyState.svg" class="w-60px">
                        </div>
                        <div class="w-100 fs-14 fw-bold text-center opacity-50">
                            Data Not Found
                        </div>
                    </div>
                    `;
                }
            },
            escapeMarkup: function (markup) {
                return markup;
            },
            placeholder: $(this).data('placeholder')
        });
    });
  });
  function callSelect2() {
    $('select:not([data-select2-id])').each(function () {
        $(this).select2({
            "language": {
                "noResults": function(){
                    return `
                    <div class="w-100 d-flex gap-1 justify-content-center py-3 flex-column">
                        <div class="w-100 text-center">
                            <img src="./public/frontend/assets/img/icons/emptyState.svg" class="w-60px">
                        </div>
                        <div class="w-100 fs-14 fw-bold text-center opacity-50">
                            Data Not Found
                        </div>
                    </div>
                    `;
                }
            },
            escapeMarkup: function (markup) {
                return markup;
            },
            placeholder: $(this).data('placeholder')
        });
    });
    $("#keyskillsInput").select2("destroy").select2({
        "language": {
            "noResults": function(){
                return `
                <div class="w-100 d-flex gap-1 justify-content-center py-3 flex-column">
                    <div class="w-100 text-center">
                        <img src="./public/frontend/assets/img/icons/emptyState.svg" class="w-60px">
                    </div>
                    <div class="w-100 fs-14 fw-bold text-center opacity-50">
                        Data Not Found
                    </div>
                </div>
                `;
            }
          },
          closeOnSelect: false,
          maximumSelectionLength: 10,
          dropdownCssClass: 'keyskillsInputDropdown',
          escapeMarkup: function (markup) {
              return markup;
          },
          placeholder: $(this).data('placeholder'),
      });
  };
  callSelect2();

  $(document).on('select2:open', (e) => {
    console.log("Event Type ðŸ‘‰ " + e.type);
      const selectId = e.target.id;
      $(".select2-search__field[aria-controls='select2-"+selectId+"-results']").each(function (key,value,){
          value.focus();
      });
  });

  //! ------------[select2 end]------------




  //? ~~~~~~~~~~~~~~~~~~~~~~~~~[test page start]~~~~~~~~~~~~~~~~~~~~~~~~~
  if($('[data-page-name=test]').length) {
    console.log('Event Type ðŸ‘‰ Availabe');

    //? ------------[toast start]------------
    const toastTrigger = document.getElementById('liveToastBtn')
    const toastLiveExample = document.getElementById('liveToast')
    if (toastTrigger) {

      ['click'].forEach((ee)=>{
        toastTrigger.addEventListener(ee, ()=> {
          const toast = new bootstrap.Toast(toastLiveExample)
          toast.show()
        })
      })
    
      toastLiveExample.addEventListener('hide.bs.toast', (event) => {
        console.log("Event Type ðŸ‘‰ " + event.type);
      })
      toastLiveExample.addEventListener('hidden.bs.toast', (event) => {
        console.log("Event Type ðŸ‘‰ " + event.type);
      })
      toastLiveExample.addEventListener('show.bs.toast', (event) => {
        console.log("Event Type ðŸ‘‰ " + event.type);
      })
      toastLiveExample.addEventListener('shown.bs.toast', (event) => {
        console.log("Event Type ðŸ‘‰ " + event.type);
      })

    }
    //! ------------[toast end]------------

    //? ------------[tooltip start]------------
    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
    const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
    //! ------------[tooltip end]------------



    //? ------------[dropzone start]------------
    // The constructor of Dropzone accepts two arguments:
    //
    // 1. The selector for the HTML element that you want to add
    //    Dropzone to, the second
    // 2. An (optional) object with the configuration
    if($('#dropzone').length) {
      let myDropzone = new Dropzone("#dropzone", { url: "/"});
    }
    //! ------------[dropzone end]------------


    //? ------------[highlight start]------------
    hljs.configure({   // optionally configure hljs
      languages: ['javascript', 'ruby', 'python', 'php']
    });
    //! ------------[highlight end]------------


    //? ------------[quill start]------------
    let toolbarOptions = [
      ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
      ['blockquote', 'code-block'],
    
      [{ 'header': 1 }, { 'header': 2 }],               // custom button values
      [{ 'list': 'ordered'}, { 'list': 'bullet' }],
      [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript
      [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent
      [{ 'direction': 'rtl' }],                         // text direction
    
      [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
    
      [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
      [{ 'font': [] }],
      [{ 'align': [] }],
    
      ['clean']                                         // remove formatting button
    ];
    
    
    if($('#editor').length) {
      let quill = new Quill('#editor', {
        modules: {
          syntax: true,
          toolbar: toolbarOptions
        },
        placeholder: 'Compose an epic...',
        theme: 'snow'
      });
    }
    
    //! ------------[quill end]------------


    //? ------------[noUiSlider start]------------
    let slider = document.getElementById('slider');
    if(slider){
      noUiSlider.create(slider, {
          start: [20, 80],
          connect: true,
          range: {
              'min': 0,
              'max': 100
          }
      });
    }
    //! ------------[noUiSlider end]------------

    //? ------------[GLightbox start]------------
    let lightbox = GLightbox();
    lightbox.on('open', (target) => {
        console.log('lightbox opened');
    });
    let lightboxDescription = GLightbox({
        selector: '.glightbox2'
    });
    let lightboxVideo = GLightbox({
        selector: '.glightbox3'
    });
    lightboxVideo.on('slide_changed', ({ prev, current }) => {
        console.log('Prev slide', prev);
        console.log('Current slide', current);

        const { slideIndex, slideNode, slideConfig, player } = current;

        if (player) {
            if (!player.ready) {
                // If player is not ready
                player.on('ready', (event) => {
                    // Do something when video is ready
                });
            }

            player.on('play', (event) => {
                console.log("Event Type ðŸ‘‰ " + event.type);
            });

            player.on('volumechange', (event) => {
                console.log("Event Type ðŸ‘‰ " + event.type);
            });

            player.on('ended', (event) => {
                console.log("Event Type ðŸ‘‰ " + event.type);
            });
        }
    });

    let lightboxInlineIframe = GLightbox({
        selector: '.glightbox4'
    });
    //! ------------[GLightbox end]------------


    //? ------------[Swiper start]------------
    let swiper = new Swiper(".mySwiper", {
      pagination: {
        el: ".swiper-pagination",
        dynamicBullets: true,
        // type: "progressbar",
      },
      navigation: {
        nextEl: ".swiper-button-next",
        prevEl: ".swiper-button-prev",
      },
    });
    //! ------------[Swiper end]------------


    //? ------------[countdown start]------------
    
    //! ------------[countdown end]------------


    //? ------------[Shuffle js start]------------
      let Shuffle = window.Shuffle;
      let element = document.querySelector('.shuffle-container');
      
      if(element) {
        let shuffleInstance = new Shuffle(element, {
          itemSelector: 'li'
        });       
        $('.shuffle-filter li').on('click',function(e){
          e.preventDefault();
          $('.shuffle-filter li').removeClass('selected');
          $(this).addClass('selected'); 
          let keyword = $(this).attr('data-target');
          shuffleInstance.filter(keyword);
        });
      }
    //! ------------[Shuffle js end]------------


    //? ------------[typed start]------------
    if($('#typed').length) {
      let typed = new Typed('#typed', {
        strings: ['My strings are: <i>strings</i> with', 'My strings are: <strong>HTML</strong>', 'My strings are: Chars &times; &copy;'],
        typeSpeed: 20,
        backSpeed: 20,
        smartBackspace: true, // this is a default
        loop: true
      });
    }
    //! ------------[typed end]------------


    let sweeta = document.querySelector('#sweetalert2');
    if(sweeta) {
      sweeta.addEventListener("click", ()=> {
        Swal.fire({
          position: 'top-end',
          icon: 'success',
          title: 'Your work has been saved',
          showConfirmButton: false,
          timer: 1500
        })
      })
    }
  }  
  //! ~~~~~~~~~~~~~~~~~~~~~~~~~[test page end]~~~~~~~~~~~~~~~~~~~~~~~~~
  if($('[data-page-name=signin]').length) {

  }

  //? ~~~~~~~~~~~~~~~~~~~~~~~~~[test page start]~~~~~~~~~~~~~~~~~~~~~~~~~
  if($('[data-page-name=signin]').length) {

    (() => {
      const validation_signin = document.querySelectorAll('.needs-validation-signin')

      Array.from(validation_signin).forEach(form => {
        const validationFormID = validation_signin;
        form.addEventListener('submit', event => {
          if (!form.checkValidity()) {
            submitWithInvalid(event);
          } else {
          let data = JSON.parse(submitWithValid(event));
          
            $.ajax({
              url: 'store',
              type: "post",
              dataType: "json",
              data: {
                "_token": data._token,
                "email":data.email,
                "password":data.password
              },
              success: function ({ data }) {
                submitWithValid(event);
                window.location.href = "dashboard";
              },
              error: function (data) {
                submitWithInvalid(event);
                let obj = JSON.parse(data.responseText);
                if(obj.error == "emailError" ){
                  swal.fire({
                    icon: 'warning',
                    text: 'Invalid Credentials',
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                  });
                }  
              }
            });
            stopRefresh(event);
          
          
          }

          form.classList.add('was-validated')
        }, false);

        let onload_formData = onload_form(event,form,validationFormID[0]);
        if(onload_formData != undefined) {
          // console.log(onload_formData);
        }
        ['input','paste','change'].forEach(function(event){
          form.addEventListener(event,function (event) {
            signin(event)
          }, false);
        });
        $(form).on('select2:select', (event) => {
            signin(event);
        });
        function signin(event) {
          if (!form.checkValidity()) {
            invalid(event)
          } else {
              let input_formData = valid(event,form,validationFormID[0]);
              if(input_formData != undefined) {
                // console.log(input_formData);
              }
          }
          form.classList.add('was-validated')
        }
      })
    })();
  }
  //! ~~~~~~~~~~~~~~~~~~~~~~~~~[test page end]~~~~~~~~~~~~~~~~~~~~~~~~~


  const showPasswords = document.querySelector('.show_password')
  if(showPasswords) {
    showPasswords.addEventListener("input", (event)=> {
      showPassword(event)
    }, false);
  }


}


// home page start

if($('[data-page-name=homePage]').length) {
         // Active navbar on scroll
         $('.centerBodyPart').scroll(function () {
          var scroll = $('.centerBodyPart').scrollTop();
          if (scroll <= 100) {
              $(".navbarWrapper").removeClass("nav-active");
          } else {
              $(".navbarWrapper").addClass("nav-active");
          }
      });
}






// $(document).ready(function() {
//   $('.weAreBuiltCounterValue').each(function() {
//     Waypoint.refreshAll();
//       $(this).counterUp({
//           delay: 10,
//           time: 1000
//       });
//   });
// });

jQuery(document).ready(function($) {
  function startCounter() {
    $('.weAreBuiltCounterValue span').counterUp({
        delay: 10,
        time: 1000
    });
  }
  
  $('[data-scrollbar]').each(function() {
    $(this).on('scroll', startCounter);
  });
});


